name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  build-validator:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest]
        protobuf-version: ['2.6.1', '3.15.0', '3.20.1', '25.2']
        include:
          - protobuf-variant: '-all'
          - abseil-version: '20230802.1'
          - protobuf-variant: ''
            protobuf-version: '2.6.1'
          - protobuf-variant: ''
            protobuf-version: '25.2'

    name: "${{ matrix.protobuf-version }} â€¢ ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Set up Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: "3.8"

    - name: Cache Dependencies
      id: cache-depends
      uses: actions/cache@v3
      with:
        path: protobuf-${{ matrix.protobuf-version }}
        key: ${{ runner.os }}-${{ matrix.protobuf-version }}

    - name: Download ProtoBuf ${{ matrix.protobuf-version }}
      if: steps.cache-depends.outputs.cache-hit != 'true'
      run: curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v${{ matrix.protobuf-version }}/protobuf${{ matrix.protobuf-variant }}-${{ matrix.protobuf-version }}.tar.gz && tar xzvf protobuf${{ matrix.protobuf-variant }}-${{ matrix.protobuf-version }}.tar.gz

    - name: Download Abseil ${{ matrix.abseil-version }}
      if: steps.cache-depends.outputs.cache-hit != 'true' && matrix.protobuf-variant == ''
      run: curl -OL https://github.com/abseil/abseil-cpp/archive/refs/tags/${{matrix.abseil-version}}.tar.gz && tar xzvf ${{matrix.abseil-version}}.tar.gz && rm -rf protobuf-${{matrix.protobuf-version}}/third_party/abseil-cpp && mv abseil-cpp-${{matrix.abseil-version}} protobuf-${{matrix.protobuf-version}}/third_party/abseil-cpp

    - name: Build ProtoBuf ${{ matrix.protobuf-version }} via autotools
      if: steps.cache-depends.outputs.cache-hit != 'true' && matrix.protobuf-variant == '-all'
      working-directory: protobuf-${{ matrix.protobuf-version }}
      run: ./configure DIST_LANG=cpp --prefix=/usr && make

    - name: Build ProtoBuf ${{ matrix.protobuf-version }} via cmake
      if: steps.cache-depends.outputs.cache-hit != 'true' && matrix.protobuf-variant == ''
      working-directory: protobuf-${{ matrix.protobuf-version }}
      run: cmake -DCMAKE_CXX_STANDARD=17 -Dprotobuf_BUILD_SHARED_LIBS=ON -Dprotobuf_BUILD_TESTS=OFF . && cmake --build . --config Release -j 4

    - name: Install ProtoBuf
      working-directory: protobuf-${{ matrix.protobuf-version }}
      run: sudo make install && sudo ldconfig

    - name: Install Open Simulation Interface
      shell: bash
      run: |
        git submodule update --init
        python -m venv .venv
        source .venv/bin/activate
        python -m pip install --upgrade pip
        python -m pip install protobuf==${{ matrix.protobuf-version }}
        cd open-simulation-interface && pip install . && cd .. 

    - name: Run trace generator
      run: |
        source .venv/bin/activate
        python generate_test_trace.py
        cp output.osi 20000101T080000Z_sv_360_${{ matrix.protobuf-version }}_10_test.osi

    - name: Archive generated trace file
      uses: actions/upload-artifact@v3
      with:
        name: 20000101T080000Z_sv_360_${{ matrix.protobuf-version }}_10_test
        path: 20000101T080000Z_sv_360_${{ matrix.protobuf-version }}_10_test.osi